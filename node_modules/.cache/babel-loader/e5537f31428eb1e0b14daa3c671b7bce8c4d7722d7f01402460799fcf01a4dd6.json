{"ast":null,"code":"var _jsxFileName = \"/Users/amirkhan/Desktop/online-services/src/Components/Pages/testimonial.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport TestimonialCard from \"../testimonialCard/testimonial_card\";\nimport image1 from \"../../assests/testimonial/1.webp\";\nimport image2 from \"../../assests/testimonial/2.webp\";\nimport image3 from \"../../assests/testimonial/3.jpeg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Testimonial = () => {\n  _s();\n  const testimonials = [{\n    image: image1,\n    title: \"Muhammad Bilal\",\n    rating: \"4.5\",\n    desc: \"The education should be very interactual. Ut tincidunt est ac dolor aliquam sodales.\"\n  }, {\n    image: image2,\n    title: \"Ammar\",\n    rating: \"4.5\",\n    desc: \"The education should be very interactual. Ut tincidunt est ac dolor aliquam sodales.\"\n  }, {\n    image: image3,\n    title: \"Muhammad\",\n    rating: \"4.5\",\n    desc: \"The education should be very interactual. Ut tincidunt est ac dolor aliquam sodales.\"\n  }];\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const nextSlide = () => {\n    if (currentIndex + 2 < testimonials.length) {\n      setCurrentIndex(currentIndex + 2);\n    }\n  };\n  const prevSlide = () => {\n    if (currentIndex - 2 >= 0) {\n      setCurrentIndex(currentIndex - 2);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-[1300px] mx-auto px-4 py-10\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: prevSlide,\n        className: \"bg-gray-200 hover:bg-gray-300 text-black px-4 py-2 rounded\",\n        disabled: currentIndex === 0,\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextSlide,\n        className: \"bg-gray-200 hover:bg-gray-300 text-black px-4 py-2 rounded\",\n        disabled: currentIndex + 2 >= testimonials.length,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 gap-6\",\n      children: testimonials.slice(currentIndex, currentIndex + 2).map((item, index) => /*#__PURE__*/_jsxDEV(TestimonialCard, {\n        image: item.image,\n        title: item.title,\n        rating: item.rating,\n        description: item.desc\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Testimonial, \"tusBbsahUVevXfyh6oH5R6YDC9Q=\");\n_c = Testimonial;\nexport default Testimonial;\nvar _c;\n$RefreshReg$(_c, \"Testimonial\");","map":{"version":3,"names":["React","useState","TestimonialCard","image1","image2","image3","jsxDEV","_jsxDEV","Testimonial","_s","testimonials","image","title","rating","desc","currentIndex","setCurrentIndex","nextSlide","length","prevSlide","className","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","slice","map","item","index","description","_c","$RefreshReg$"],"sources":["/Users/amirkhan/Desktop/online-services/src/Components/Pages/testimonial.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport TestimonialCard from \"../testimonialCard/testimonial_card\";\nimport image1 from \"../../assests/testimonial/1.webp\";\nimport image2 from \"../../assests/testimonial/2.webp\";\nimport image3 from \"../../assests/testimonial/3.jpeg\";\n\nconst Testimonial = () => {\n  const testimonials = [\n    {\n      image: image1,\n      title: \"Muhammad Bilal\",\n      rating: \"4.5\",\n      desc: \"The education should be very interactual. Ut tincidunt est ac dolor aliquam sodales.\",\n    },\n    {\n      image: image2,\n      title: \"Ammar\",\n      rating: \"4.5\",\n      desc: \"The education should be very interactual. Ut tincidunt est ac dolor aliquam sodales.\",\n    },\n    {\n      image: image3,\n      title: \"Muhammad\",\n      rating: \"4.5\",\n      desc: \"The education should be very interactual. Ut tincidunt est ac dolor aliquam sodales.\",\n    },\n  ];\n\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  const nextSlide = () => {\n    if (currentIndex + 2 < testimonials.length) {\n      setCurrentIndex(currentIndex + 2);\n    }\n  };\n\n  const prevSlide = () => {\n    if (currentIndex - 2 >= 0) {\n      setCurrentIndex(currentIndex - 2);\n    }\n  };\n\n  return (\n    <div className=\"max-w-[1300px] mx-auto px-4 py-10\">\n      <div className=\"flex justify-between items-center mb-4\">\n        <button\n          onClick={prevSlide}\n          className=\"bg-gray-200 hover:bg-gray-300 text-black px-4 py-2 rounded\"\n          disabled={currentIndex === 0}\n        >\n          Prev\n        </button>\n        <button\n          onClick={nextSlide}\n          className=\"bg-gray-200 hover:bg-gray-300 text-black px-4 py-2 rounded\"\n          disabled={currentIndex + 2 >= testimonials.length}\n        >\n          Next\n        </button>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        {testimonials\n          .slice(currentIndex, currentIndex + 2)\n          .map((item, index) => (\n            <TestimonialCard\n              key={index}\n              image={item.image}\n              title={item.title}\n              rating={item.rating}\n              description={item.desc}\n            />\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Testimonial;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}